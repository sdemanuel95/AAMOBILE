package com.tofitsolutions.armasdurasargentinas;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class MaquinaController {
    ArrayList<Maquina> listaMaquinas = new ArrayList<>();
    TraerMaquinas traerMaquina;

    public MaquinaController(){

        traerMaquina = new TraerMaquinas();
        traerMaquina.execute();
        System.out.println(traerMaquina.getStatus());

    }

    public ArrayList<Maquina> traerMaquinas(){
            return listaMaquinas;

    }

    private class TraerMaquinas extends AsyncTask<Void, Integer, Void> {

        private ArrayList<Maquina> maquinas;
        private int progreso = 0;

        @Override
        protected void onPreExecute() {

            super.onPreExecute();
        }

        @Override
        protected void onProgressUpdate(Integer... values) {

            super.onProgressUpdate(values);
        }

        @Override
        protected Void doInBackground(Void... params) {

            maquinas = new ArrayList<Maquina>();
            Conexion conexion = new Conexion();

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = conexion.crearConexion();
                Statement stmt = con.createStatement();
                final ResultSet rs = stmt.executeQuery("SELECT * FROM maquina");

                rs.last(); //me voy al último
                int sizeRS = rs.getRow(); //guardo el tamaño
                rs.beforeFirst(); // lo dejo donde estaba para recorrerlo


            } catch (SQLException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(Void aVoid) {
            listaMaquinas = maquinas;

            super.onPostExecute(aVoid);
        }
    }


    private class traerMaquinas extends AsyncTask<Void, Integer, Void> {

        private ArrayList<Maquina> maquinas;
        private int progreso = 0;

        @Override
        protected void onPreExecute() {

            super.onPreExecute();
        }

        @Override
        protected void onProgressUpdate(Integer... values) {

            super.onProgressUpdate(values);
        }

        @Override
        protected Void doInBackground(Void... params) {

            maquinas = new ArrayList<Maquina>();
            Conexion conexion = new Conexion();

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = conexion.crearConexion();
                Statement stmt = con.createStatement();
                final ResultSet rs = stmt.executeQuery("SELECT * FROM maquina");

                rs.last(); //me voy al último
                int sizeRS = rs.getRow(); //guardo el tamaño
                rs.beforeFirst(); // lo dejo donde estaba para recorrerlo



                while (rs.next()) {
                    long id = rs.getInt("ID");
                    String clasificacion = rs.getString("clasificacion");
                    String marca = rs.getString("marca");
                    String modelo = rs.getString("modelo");
                    String tipo_mp = rs.getString("tipo_mp");
                    String diametro_minimo = rs.getString("diametro_minimo");
                    String diametro_maximo = rs.getString("diametro_maximo");
                    String merma = rs.getString("merma");
                    maquinas.add(new Maquina(id, clasificacion, marca, modelo, tipo_mp, diametro_minimo, diametro_maximo, merma));
                    progreso++;
                    publishProgress(progreso);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(Void aVoid) {

            listaMaquinas = maquinas;
            super.onPostExecute(aVoid);
        }
    }





}
